plugins {
    id 'org.jetbrains.kotlin.jvm' 
    id 'application'
}

dependencies {
    implementation project(":api")
    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}" 
    implementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    implementation "org.pf4j:pf4j:${pf4jVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
    api "info.picocli:picocli:${picoCliVersion}"
    implementation "org.yaml:snakeyaml:${snakeyamlVersion}"
    implementation "com.github.kittinunf.fuel:fuel:${fuelVersion}"
    implementation "com.github.kittinunf.fuel:fuel-json:${fuelVersion}"
}

def appMainClass = "net.corda.cli.application.BootKt"

application {
    mainClass.set(appMainClass)
}

tasks.named("run") {
    systemProperty("pf4j.pluginsDir", file(pluginsDir).absolutePath)
}

def fatJar = tasks.register('fatJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    dependsOn(tasks.named("compileKotlin"))

    from(sourceSets.main.output)

    dependsOn(configurations.runtimeClasspath)
    from({
        configurations.runtimeClasspath.filter { it.name.endsWith("jar") }.collect { zipTree(it) }
    })
    manifest {
        attributes["Main-Class"] = appMainClass
    }

    archiveBaseName = 'corda-cli'
}

artifacts {
    archives fatJar
}
