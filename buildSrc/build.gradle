import static org.gradle.api.JavaVersion.VERSION_11
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm' version "1.5.31" //match version in
}

// We can't get the values directly from `gradle.properties` from here for some gradle-y reason.
// So we'll load it into our own object to grab what we need.
def constants = new Properties()
file("$rootDir/../gradle.properties").withInputStream { InputStream input -> constants.load(input) }
def internalPublishVersion = constants.getProperty('internalPublishVersion')
def artifactoryContextUrl = constants.getProperty('artifactoryContextUrl')
def javaVersion = VERSION_11

repositories {
    gradlePluginPortal()
    mavenCentral()
    def cordaUseCache = System.getenv("CORDA_USE_CACHE")
    if (cordaUseCache != null) {
        maven {
            url = "$artifactoryContextUrl/$cordaUseCache"
            name = "R3 Maven remote repositories"
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = System.getenv('CORDA_ARTIFACTORY_USERNAME')
                password = System.getenv('CORDA_ARTIFACTORY_PASSWORD')
            }
        }
    } else {
        gradlePluginPortal()

        maven {
            url "$artifactoryContextUrl/corda-releases"
            content {
                includeGroupByRegex 'net\\.corda\\.plugins(\\..*)?'
            }
        }

        maven {
            url "$artifactoryContextUrl/engineering-tools-maven"
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username =  System.getenv('CORDA_ARTIFACTORY_USERNAME')
                password =  System.getenv('CORDA_ARTIFACTORY_PASSWORD')
            }
            content {
                includeGroupByRegex 'com\\.r3\\.internal(\\..*)?'
            }
        }
    }
}


dependencies {
    if (System.getenv('CORDA_ARTIFACTORY_USERNAME') != null || project.hasProperty("cordaArtifactoryUsername")){
        implementation "com.r3.internal.gradle.plugins.r3Publish:com.r3.internal.gradle.plugins.r3Publish.gradle.plugin:${internalPublishVersion}"
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        allWarningsAsErrors = true
        languageVersion = '1.4'
        apiVersion = '1.4'
        verbose = true
        jvmTarget = javaVersion
    }
}