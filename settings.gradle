pluginManagement {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }

    plugins {
        id 'org.jetbrains.kotlin.jvm' version kotlinVersion
        id 'com.gradle.enterprise' version gradleEnterpriseVersion
        id 'com.gradle.common-custom-user-data-gradle-plugin' version gradleDataPlugin
    }
}

plugins {
    id 'com.gradle.common-custom-user-data-gradle-plugin'
    id 'com.gradle.enterprise'
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
}

rootProject.name = "corda-cli-plugin-host"

include 'api'
include 'app'
include 'plugins'
include 'plugins:mgm'
include 'plugins:plugin1'
include 'plugins:plugin2'
include 'plugins:template'


gradleEnterprise {
    server = gradleEnterpriseUrl
    allowUntrustedServer = false
    buildScan {
        def apiKey = settings.ext.find('CORDA_GRADLE_SCAN_KEY') ?: System.getenv('CORDA_GRADLE_SCAN_KEY')
        if (apiKey?.trim()) {
            publishAlways()
            capture {
                taskInputFiles = true
            }
            uploadInBackground = false
            accessKey = apiKey
        }
    }
}
